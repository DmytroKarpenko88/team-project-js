{"mappings":"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","sources":["src/index.js","src/js/pagination.js","src/js/events/renderGalleryCard.js","src/js/modal/modal.js","src/js/loader.js","src/js/events/scrollUp.js","src/js/services/search-by-keyword.js","src/js/events/filter.js","src/js/events/themeSwitcher.js","src/js/events/preloader.js","src/js/team.js"],"sourcesContent":["import './js/services/service-api';\nimport './js/pagination';\nimport './js/events/renderGalleryCard';\n\nimport './js/modal/modal';\n\nimport './js/loader';\n\nimport './js/events/scrollUp';\n\nimport './js/services/search-by-keyword';\nimport './js/events/filter';\nimport './js/events/themeSwitcher';\nimport './js/events/preloader';\nimport './js/team';\n","import Pagination from 'tui-pagination';\n// import 'tui-pagination/dist/tui-pagination.css';\nimport serviceApi from './services/service-api'\n\nconst container = document.querySelector('#pagination');\nconst options = {\n  totalItems: 20000,\n  itemsPerPage: 20,\n  visiblePages: 5,\n  page: 1,\n  centerAlign: true,\n  firstItemClassName: 'tui-first-child',\n  lastItemClassName: 'tui-last-child',\n  template: {\n    page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n    currentPage:\n      '<strong class=\"tui-page-btn current-color tui-is-selected\">{{page}}</strong>',\n    moveButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</a>',\n    disabledMoveButton:\n      '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n      '<span class=\"tui-ico-ellip\">...</span>' +\n      '</a>',\n  },\n};\n\nconst pagination = new Pagination(container, options);\n\nexport {pagination}\n\n\n\n","import { serviceApi } from '../services/service-api';\nimport { pagination } from '../pagination';\nexport function renderCardWithGenres(movie) {\n  const { id, poster, title, genres, release, vote_average } = movie;\n  const posterUrl = poster\n    ? poster\n    : 'https://dummyimage.com/395x574/000/fff.jpg&text=no+poster';\n\n  const genresToShow = genres.slice(0, 2);\n  if (genres.length > 2) {\n    genresToShow.push('Others');\n  }\n  const year = release ? release : null;\n\n  // let year = '';\n  // if (typeof release !== 'undefined' && release.length > 4) {\n  //   year = release.slice(0, 4);\n  // }\n  return `<li class=\"gallery__item\">\n             <a class=\"gallery__link\" href=\"#\" data-modal-open data-id=\"${id}\">\n              <img class=\"gallery__image\" src=\"${posterUrl}\" alt=\"${title} movie poster\" loading=\"lazy\">\n             <div class=\"info\">\n              <h3 class=\"info__item\">${title}</h3>\n               <div class=\"info-detail\">\n                <p class=\"info-detail__item\">${genresToShow.join(', ')}</p>\n  <p class=\"info-detail__item\">${year}<span class=\"info-detail__rating\">&#9733;</span><span class=\"film-rating\">${vote_average?.toFixed(\n    1\n  )}</span></p>\n               </div>\n             </div>\n            </a>\n           </li>`;\n}\n\nconst currentPeriod = document.querySelector('.movie-switcher__button.active').dataset.period || 'day';\n\nserviceApi\n  .getListMovies(currentPeriod)\n  .then(res => {\n    setFilmsToLocalStorage(res.listMovies);\n    renderListMovies(res.listMovies);\n  })\n  .catch(error => console.log(error));\n\n  pagination.on('afterMove', (event) => {\n    const currentPage = event.page;\n    serviceApi\n  .getListMovies(currentPeriod, currentPage)\n  .then(res => {\n    setFilmsToLocalStorage(res.listMovies);\n    renderListMovies(res.listMovies);\n  })\n  .catch(error => console.log(error));\n   window.scrollTo(0, 0)\n  });\n\nexport function renderListMovies(list) {\n  const movieCards = list.map(movie => renderCardWithGenres(movie));\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = movieCards.join('');\n}\n\nexport function setFilmsToLocalStorage(list) {\n  const localListMovies = {};\n  list.forEach(item => {\n    const { id, ...props } = item;\n    localListMovies[id] = props;\n  });\n  localStorage.setItem('listMovies', JSON.stringify(localListMovies));\n}\n\n// export function renderMoviesCard(movies) {\n//   const movieCards = movies.map(\n//     ({ id, genres, poster, release, title, vote_average }) => {\n//       const posterUrl = `${poster}`;\n//       return `<li class=\"gallery__item\">\n//            <a class=\"gallery__link\" href=\"#\">\n//             <img class=\"gallery__image\" data-id=\"${id}\" src=\"${posterUrl}\" alt=\"${title} movie poster\" loading=\"lazy\">\n//            <div class=\"info\">\n//             <h3 class=\"info__item\">${title}</h3>\n//              <div class=\"info-detail\">\n//               <p class=\"info-detail__item\">${genres.join(', ')}</p>\n//                <p class=\"info-detail__item\">${release} <span class=\"film-rating\">${vote_average?.toFixed(\n//         1\n//       )}</span></p>\n//              </div>\n//            </div>\n//           </a>\n//          </li>`;\n//     }\n//   );\n\n//   const gallery = document.querySelector('.gallery');\n//   gallery.innerHTML = movieCards.join('');\n// }\n\n// export async function renderMoviesCard() {\n//   try {\n//     const { listMovies } = await serviceApi.getListMovies('week');\n//     const movieCards = listMovies.map(\n//       ({ id, genres, poster, release, title, vote_average }) => {\n//         return `<li class=\"gallery__item\">\n//          <a class=\"gallery__link\" href=\"#\">\n//           <img class=\"gallery__image\" data-id=\"${id}\" src=\"${poster}\" alt=\"${title} movie poster\" loading=\"lazy\">\n//          <div class=\"info\">\n//           <h3 class=\"info__item\">${title}</h3>\n//            <div class=\"info-detail\">\n//             <p class=\"info-detail__item\">${genres.join(', ')}</p>\n//              <p class=\"info-detail__item\">${release} <span class=\"film-rating\">${vote_average?.toFixed(\n//           1\n//         )}</span></p>\n//            </div>\n//          </div>\n//         </a>\n//        </li>`;\n//       }\n//     );\n\n//     const gallery = document.querySelector('.gallery');\n//     gallery.innerHTML = movieCards.join('');\n//   } catch (error) {\n//     console.error(error.message);\n//   }\n// }\n\n// renderMoviesCard();\n\n// Функция для получения списка жанров по id\n// async function getGenresByIds(genreIds) {\n//   const keyGenres = JSON.parse(localStorage.getItem('genres'));\n//   // Используем метод map для преобразования каждого id жанра в жанр из localStorage\n//   const genres = genreIds.map(id => keyGenres[id]).filter(genre => genre);\n//   return genres || [];\n// }\n","const backdrop = document.querySelector('[data-modal]')\nconst openButtonModal = document.querySelector('.gallery');\nconst closeButtonModal = document.querySelector('[data-modal-close]')\nconst body = document.querySelector('body');\nconst modal = document.querySelector('.modal');\n\nconst BTN_WATCHED_ADD = 'add to Watched';\nconst BTN_WATCHED_REMOVE = 'remove from Watched';\nconst BTN_QUEUE_ADD = 'add to queue';\nconst BTN_QUEUE_REMOVE = 'remove from queue';\nconst LIST_WATCHED = 'watchedMovies';\nconst LIST_QUEUE = 'listQueue';\n\nlet dataMovie = null;\n\nopenButtonModal.addEventListener('click', onOpenButtonClick)\ncloseButtonModal.addEventListener('click', onCloseButtonClick)\nbackdrop.addEventListener('click', onBackdropClicl)\nmodal.addEventListener('click', handleClickModal);\n\nfunction onOpenButtonClick(e) {\n  e.preventDefault();\n  const currentMovie = e.target.closest('[data-modal-open]');\n\n  if (currentMovie) {\n    backdrop.classList.remove('is-hidden');\n    window.addEventListener('keydown', closeModalByEscape);\n    body.style.overflow = 'hidden';\n    renderPopupBody(currentMovie.dataset.id);\n  }\n}\n\nfunction onCloseButtonClick()  {\n  backdrop.classList.add('is-hidden')\n  window.removeEventListener('keydown', closeModalByEscape)\n  body.style.overflow = 'auto';\n}\n\nfunction onBackdropClicl(event) {\n  if (event.currentTarget === event.target) {\n    onCloseButtonClick()\n  }\n}\n\nfunction closeModalByEscape(event) {\n  const closeButtonEscape = 'Escape'\n  if (event.code === closeButtonEscape) {\n    onCloseButtonClick()\n  }\n}\n\nfunction renderPopupBody(id) {\n  dataMovie = JSON.parse(localStorage.getItem('listMovies'))[id];\n  localStorage.getItem(LIST_WATCHED) || localStorage.setItem(LIST_WATCHED, JSON.stringify({}));\n  localStorage.getItem(LIST_QUEUE) || localStorage.setItem(LIST_QUEUE, JSON.stringify({}));\n\n  const {\n    poster,\n    title,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    overview,\n  } = dataMovie;\n\n  const container = document.querySelector('.modal-content-container');\n\n  if (container) {\n    container.innerHTML = `\n      <div class=\"modal-photo-container\">\n        <picture>\n          <img src=\"${poster}\" width=\"\" class=\"statistick-img\" alt=\"\" />\n        </picture>\n      </div>\n      <div class=\"content-modal\" data-id='${id}'>\n        <h2 class=\"modal-title\">${title}</h2>\n        <div class=\"statistic-container\">\n           <ul class=\"list\">\n              <li>\n                <div class=\"statistic-wraper\">\n                  <p class=\"first-item-statistic\">Vote / Votes</p>\n                  <p><span class=\"statistic-vote\">${vote_average}</span>/<span class=\"statistic-votes\">${vote_count}</span></p>\n                </div>\n              </li>\n              <li>\n                <div class=\"statistic-wraper\">\n                  <p class=\"first-item-statistic\">Popularity</p>\n                  <p>${popularity}</p>\n                </div>\n              </li>\n              <li>\n                <div class=\"statistic-wraper\">\n                  <p class=\"first-item-statistic\">Original Title</p>\n                  <p>${original_title}</p>\n                </div>\n              </li>\n              <li>\n                <div class=\"statistic-wraper\">\n                  <p class=\"first-item-statistic\">Genre</p>\n                  <p>${genres.join(', ')}</p>\n                </div>\n              </li>\n            </ul>\n        </div>\n        <h3 class=\"content-modal-title\">About</h3>\n        <p class=\"content-modal\">${overview}</p>\n        <div class=\"modal-btn-container\">\n<!--          <button class=\"modal-btn btn-add-watched\" data-btn-watch>add to Watched</button>-->\n          <button class=\"modal-btn btn-add-watched\" data-btn-watch>${getButtonText(id, LIST_WATCHED)}</button>\n<!--          <button class=\"modal-btn btn-add-queue\" data-btn-queue>add to queue</button>-->\n          <button class=\"modal-btn btn-add-queue\" data-btn-queue>${getButtonText(id, LIST_QUEUE)}</button>\n        </div>\n      </div>\n    `;\n  }\n}\n\nfunction handleClickModal(e) {\n  const target = e.target;\n  if (target.closest('[data-btn-watch]')) {\n    toggleStatus('data-btn-watch', LIST_WATCHED);\n  }\n  if (target.closest('[data-btn-queue]')) {\n    toggleStatus('data-btn-queue', LIST_QUEUE);\n  }\n}\n\nfunction isIncluded(idMovie, listLocalStorage) {\n  return idMovie in JSON.parse(localStorage.getItem(listLocalStorage));\n}\n\nfunction getButtonText(id, typeList) {\n  let text = 'null';\n\n  switch (typeList) {\n    case LIST_WATCHED:\n      text = isIncluded(id, LIST_WATCHED) ? BTN_WATCHED_REMOVE : BTN_WATCHED_ADD;\n      break;\n    case LIST_QUEUE:\n      text = isIncluded(id, LIST_QUEUE) ? BTN_QUEUE_REMOVE : BTN_QUEUE_ADD;\n      break;\n  }\n\n  return text;\n}\n\nfunction toggleStatus(dataAttr, typeList) {\n  if (!dataAttr) return;\n  const el = document.querySelector(`[${dataAttr}]`);\n\n  const currentID = el.closest('.content-modal').dataset.id;\n\n  const list = JSON.parse(localStorage.getItem(typeList)) ?? {};\n\n  if (currentID in list) {\n    delete list[currentID];\n  } else {\n    list[currentID] = dataMovie;\n  }\n\n  localStorage.setItem(typeList, JSON.stringify(list));\n\n  el.textContent = getButtonText(currentID, typeList);\n}","const loader = document.querySelector('.loader');\n\nwindow.addEventListener('load', () => {\n    loader.classList.add('done');\n});","document.addEventListener('DOMContentLoaded', function () {\n  let btn = document.querySelector('#toTop');\n  window.addEventListener('scroll', function () {\n    window.pageYOffset > 100\n      ? btn.classList.add('show')\n      : btn.classList.remove('show');\n  });\n\n  btn.onclick = function (click) {\n    click.preventDefault();\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n});\n","import { serviceApi } from './service-api';\nimport {\n  renderListMovies,\n  setFilmsToLocalStorage,\n} from '../events/renderGalleryCard';\nimport { pagination } from '../pagination';\n// import { loader }\n\nconst searchForm = document.querySelector('#search-form');\nconst pag = document.querySelector('#pagination');\n\nsearchForm.addEventListener('submit', onSearchByKeyword);\n\nlet query;\n\nasync function onSearchByKeyword(e) {\n  e.preventDefault();\n\n  query = e.target.searchQuery.value.trim();\n  if (!query) {\n    return;\n  }\n\n  const res = await serviceApi.searchMovie(query);\n  console.log(res);\n  setFilmsToLocalStorage(res.listMovies);\n  renderListMovies(res['listMovies']);\n\n  \n  pagination.reset(res.total_pages);\n  pagination.on('afterMove', event => {\n    const currentPage = event.page;\n    if (onSearchByKeyword) {\n      serviceApi.searchMovie(query, currentPage).then(res => {\n        return renderListMovies(res['listMovies']);\n      });\n    } else {\n      serviceApi\n        .getListMovies('week', currentPage)\n        .then(res => renderListMovies(res.listMovies));\n    }\n    window.scrollTo(0, 0);\n  });\n\n  // функція, яка буде показувати лоадер\n}\n","import { serviceApi } from '../services/service-api';\nimport { pagination } from '../pagination';\nimport {\n  renderListMovies,\n  setFilmsToLocalStorage,\n} from '../events/renderGalleryCard';\n\nconst dayBtn = document.querySelector('#dayBtn');\nconst weekBtn = document.querySelector('#weekBtn');\n\ndayBtn.addEventListener('click', async () => {\n  dayBtn.classList.add('active');\n  weekBtn.classList.remove('active');\n  weekBtn.innerText = 'This Week';\n\n  // Get movies for selected period and render them\n  const period = 'day';\n  const movies = await serviceApi.getListMovies(period);\n  setFilmsToLocalStorage(movies.listMovies);\n  renderListMovies(movies.listMovies);\n\n  pagination.reset(movies.total_pages);\n\n  pagination.on('afterMove', (event) => {\n    const currentPage = event.page;\n    serviceApi\n  .getListMovies(period, currentPage)\n  .then(res => {\n    setFilmsToLocalStorage(res.listMovies);\n    renderListMovies(res.listMovies);\n  })\n  .catch(error => console.log(error));\n   window.scrollTo(0, 0)\n  });\n});\n\nweekBtn.addEventListener('click', async () => {\n  weekBtn.classList.add('active');\n  dayBtn.classList.remove('active');\n  dayBtn.innerText = 'Today';\n\n  // Get movies for selected period and render them\n  const period = 'week';\n  const movies = await serviceApi.getListMovies(period);\n  setFilmsToLocalStorage(movies.listMovies);\n  renderListMovies(movies.listMovies);\n\n  pagination.reset(movies.total_pages);\n\n  pagination.on('afterMove', (event) => {\n    const currentPage = event.page;\n    serviceApi\n  .getListMovies(period, currentPage)\n  .then(res => {\n    setFilmsToLocalStorage(res.listMovies);\n    renderListMovies(res.listMovies);\n  })\n  .catch(error => console.log(error));\n   window.scrollTo(0, 0)\n  });\n});\n\n// Render initial movies\nasync function initialize() {\n  // Render initial movies\n  const initialPeriod = 'day';\n  const initialMovies = await serviceApi.getListMovies(initialPeriod);\n  renderListMovies(initialMovies.listMovies);\n}\n\ninitialize();\n","const checkbox = document.querySelector('#theme-switch-toggle');\n\nconst Theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n};\n\ndocument.body.classList.add(Theme.LIGHT);\n\ncheckbox.addEventListener('change', onCheckboxChange);\n\nfunction onCheckboxChange() {\n  document.body.classList.toggle(Theme.DARK);\n  document.body.classList.toggle(Theme.LIGHT);\n\n  setThemeInfoToLocalStorage();\n}\n\nfunction setThemeInfoToLocalStorage() {\n  if (document.body.classList.contains(Theme.LIGHT)) {\n    checkbox.setAttribute('checked', false);\n    localStorage.setItem('active-theme', Theme.LIGHT);\n  } else if (document.body.classList.contains(Theme.DARK)) {\n    checkbox.setAttribute('checked', true);\n    localStorage.setItem('active-theme', Theme.DARK);\n  }\n}\n\ngetThemeInfoFromLocalStorage();\n\nfunction getThemeInfoFromLocalStorage() {\n  if (localStorage.getItem('active-theme') === Theme.DARK) {\n    onCheckboxChange();\n  }\n}\n","const preloader = document.querySelector('.loading');\nfunction preloaderIsHided() {\n  preloader.classList.add('loading--hiden');\n}\nfunction preloaderDisable() {\n  preloader.style.display = 'none';\n}\n\nwindow.onload = function () {\n  setTimeout(preloaderIsHided, 1500);\n  setTimeout(preloaderDisable, 2000);\n};\n","const modalCloseBtn = `\n<button class=\"modal__btn-close btn__close-modal\">\n      <svg\n\n      </svg>\n    </button>\n`;\n\nconst teamListModal = document.createElement('ul');\nconst teamTitle = document.createElement('h2');\n\nfunction onModalTeam(e) {\n  e.preventDefault();\n}\n\nrenderTeamModal();\nopenModal();\nmodalBackdrop.firstElementChild.classList.add('team-modal');\nmodalBackdrop.firstElementChild.classList.remove('modal-open');\n\nfunction renderTeamModal() {\n  modalBackdrop.firstElementChild.innerHTML = '';\n  teamListModal.innerHTML = '';\n  teamTitle.innerHTML = '';\n  teamTitle.classList.add('team__modal-title');\n  teamTitle.insertAdjacentHTML('beforeend', 'GoIT team 5');\n  modalBackdrop.firstElementChild.insertAdjacentElement('beforeend', teamTitle);\n\n  modalBackdrop.firstElementChild.insertAdjacentElement(\n    'beforeend',\n    teamListModal\n  );\n  modalBackdrop.firstElementChild.insertAdjacentHTML(\n    'beforeend',\n    modalCloseBtn\n  );\n  teamListModal.classList.add('team__modal-list');\n  team.map(member => {\n    const markup = `<li class=\"team__modal-item\">\n\t\t<img src=\"${member.img}\" class=\"team__modal-pic\">\n\t\t<h2 class=\"team__modal-member\">${member.name}</h2>\n    <p class=\"team__modal-role\">${member.role}</p>\n\t\t<div>\n\t\t<a href=\"${member.social}\" target=\"_blank\" class=\"team__modal-link\">\n        <svg class=\"icon-github\"></svg>\n        </a>\n\t\t</div>\n\t\t</li>`;\n    modalTeamList.insertAdjacentHTML('beforeend', markup);\n  });\n}\n"],"names":["parcelRequire","$fb9GJ","$1bab9c519cfa82bc$var$container","document","querySelector","$1bab9c519cfa82bc$export$22fa394f3ba39578","$parcel$interopDefault","totalItems","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","$gwtqX","$7ab64900740c802f$var$currentPeriod","dataset","period","$7ab64900740c802f$export$2748887abc8deea0","list","movieCards","map","movie","id","poster","title","genres","release","vote_average","posterUrl","genresToShow","slice","length","push","year","join","toFixed","$7ab64900740c802f$export$bf5e8f8f83e1d784","innerHTML","$7ab64900740c802f$export$2216c845f89689b6","localListMovies","forEach","item","props","localStorage","setItem","JSON","stringify","serviceApi","getListMovies","then","res","listMovies","catch","error","console","log","on","event","window","scrollTo","$830b6cebb9d93ac2$var$backdrop","$830b6cebb9d93ac2$var$openButtonModal","$830b6cebb9d93ac2$var$closeButtonModal","$830b6cebb9d93ac2$var$body","$830b6cebb9d93ac2$var$modal","$830b6cebb9d93ac2$var$dataMovie","$830b6cebb9d93ac2$var$onCloseButtonClick","classList","add","removeEventListener","$830b6cebb9d93ac2$var$closeModalByEscape","style","overflow","code","$830b6cebb9d93ac2$var$isIncluded","idMovie","listLocalStorage","parse","getItem","$830b6cebb9d93ac2$var$getButtonText","typeList","text","$830b6cebb9d93ac2$var$toggleStatus","dataAttr","el","currentID","closest","textContent","addEventListener","e","preventDefault","currentMovie","target","remove","vote_count","popularity","original_title","overview","container","$830b6cebb9d93ac2$var$renderPopupBody","currentTarget","$bdfcdc80b4c38739$var$loader","btn","pageYOffset","onclick","click","top","behavior","$e565a97a09c20d4b$var$searchForm","$e565a97a09c20d4b$var$query","async","$e565a97a09c20d4b$var$onSearchByKeyword","searchQuery","value","trim","res1","searchMovie","reset","total_pages","$a6eab0b6ae671a56$var$dayBtn","$a6eab0b6ae671a56$var$weekBtn","innerText","movies","$a6eab0b6ae671a56$var$initialize","$7a9c6fbbe83c8a59$var$checkbox","$7a9c6fbbe83c8a59$var$Theme","$7a9c6fbbe83c8a59$var$onCheckboxChange","body","toggle","contains","setAttribute","$db7c6654de6b9856$var$preloader","$db7c6654de6b9856$var$preloaderIsHided","$db7c6654de6b9856$var$preloaderDisable","display","onload","setTimeout","$2858ae8b5229c42d$var$teamListModal","createElement","$2858ae8b5229c42d$var$teamTitle","modalBackdrop","firstElementChild","insertAdjacentHTML","insertAdjacentElement","team","member","markup","img","name","role","social","modalTeamList","openModal"],"version":3,"file":"index.8d468788.js.map"}