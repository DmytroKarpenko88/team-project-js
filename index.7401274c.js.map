{"mappings":"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","sources":["src/index.js","src/js/pagination.js","src/js/events/renderGalleryCard.js","src/js/modal/modal.js","src/js/loader.js","src/js/events/scrollUp.js","src/js/services/search-by-keyword.js","src/js/events/filter.js","src/js/events/themeSwitcher.js","src/js/events/preloader.js","src/js/team.js"],"sourcesContent":["import './js/services/service-api';\nimport './js/pagination';\nimport './js/events/renderGalleryCard';\n\nimport './js/modal/modal';\n\nimport './js/loader';\n\nimport './js/events/scrollUp';\n\nimport './js/services/search-by-keyword';\nimport './js/events/filter';\nimport './js/events/themeSwitcher';\nimport './js/events/preloader';\nimport './js/team';\n","import Pagination from 'tui-pagination';\n// import 'tui-pagination/dist/tui-pagination.css';\n\nconst container = document.querySelector('#pagination');\nconst options = {\n  totalItems: 20000,\n  itemsPerPage: 20,\n  visiblePages: 5,\n  page: 1,\n  centerAlign: true,\n  firstItemClassName: 'tui-first-child',\n  lastItemClassName: 'tui-last-child',\n  template: {\n    page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n    currentPage:\n      '<strong class=\"tui-page-btn current-color tui-is-selected\">{{page}}</strong>',\n    moveButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</a>',\n    disabledMoveButton:\n      '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n      '<span class=\"tui-ico-ellip\">...</span>' +\n      '</a>',\n  },\n};\n\n\n\nconst pagination = new Pagination(container, options);\n\nexport {pagination};\n\n\n\n","import { serviceApi } from '../services/service-api';\nimport { pagination } from '../pagination';\nexport function renderCardWithGenres(movie) {\n  const { id, poster, title, genres, release, vote_average } = movie;\n  const posterUrl = poster\n    ? poster\n    : 'https://dummyimage.com/395x574/000/fff.jpg&text=no+poster';\n\n  const genresToShow = genres.slice(0, 2);\n  if (genres.length > 2) {\n    genresToShow.push('Others');\n  }\n  const year = release ? release : null;\n\n  // let year = '';\n  // if (typeof release !== 'undefined' && release.length > 4) {\n  //   year = release.slice(0, 4);\n  // }\n  return `<li class=\"gallery__item\">\n             <a class=\"gallery__link\" href=\"#\" data-modal-open data-id=\"${id}\">\n              <img class=\"gallery__image\" src=\"${posterUrl}\" alt=\"${title} movie poster\" loading=\"lazy\">\n             <div class=\"info\">\n              <h3 class=\"info__item\">${title}</h3>\n               <div class=\"info-detail\">\n                <p class=\"info-detail__item\">${genresToShow.join(', ')}</p>\n   <p class=\"info-detail__item\">${year}\n  <span class=\"film-rating film-rating--${getClassByRate(vote_average)}\">\n    ${Number(vote_average).toFixed(1)}</span></p>\n               </div>\n             </div>\n            </a>\n           </li>`;\n}\n\n// const currentPeriod = document.querySelector('.movie-switcher__button.active').dataset.period ||'day';\n\n// serviceApi\n//   .getListMovies(currentPeriod)\n//   .then(res => {\n//     setFilmsToLocalStorage(res.listMovies);\n//     renderListMovies(res.listMovies);\n//   })\n//   .catch(error => console.log(error));\n\n  // pagination.on('afterMove', (event) => {\n  //   const currentPage = event.page;\n  //   serviceApi\n  // .getListMovies(currentPeriod, currentPage)\n  // .then(res => {\n  //   setFilmsToLocalStorage(res.listMovies);\n  //   renderListMovies(res.listMovies);\n  // })\n  // .catch(error => console.log(error));\n  //  window.scrollTo(0, 0)\n  // });\n\nexport function renderListMovies(list) {\n  const movieCards = list.map(movie => renderCardWithGenres(movie));\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = movieCards.join('');\n}\n\nexport function setFilmsToLocalStorage(list) {\n  const localListMovies = {};\n  list.forEach(item => {\n    const { id, ...props } = item;\n    localListMovies[id] = props;\n  });\n  localStorage.setItem('listMovies', JSON.stringify(localListMovies));\n}\n\nfunction getClassByRate(vote) {\n  if (vote >= 8) {\n    return 'green';\n  } else if (vote > 6) {\n    return 'orange';\n  } else {\n    return 'red';\n  }\n}\n\n// export function renderMoviesCard(movies) {\n//   const movieCards = movies.map(\n//     ({ id, genres, poster, release, title, vote_average }) => {\n//       const posterUrl = `${poster}`;\n//       return `<li class=\"gallery__item\">\n//            <a class=\"gallery__link\" href=\"#\">\n//             <img class=\"gallery__image\" data-id=\"${id}\" src=\"${posterUrl}\" alt=\"${title} movie poster\" loading=\"lazy\">\n//            <div class=\"info\">\n//             <h3 class=\"info__item\">${title}</h3>\n//              <div class=\"info-detail\">\n//               <p class=\"info-detail__item\">${genres.join(', ')}</p>\n//                <p class=\"info-detail__item\">${release} <span class=\"film-rating\">${vote_average?.toFixed(\n//         1\n//       )}</span></p>\n//              </div>\n//            </div>\n//           </a>\n//          </li>`;\n//     }\n//   );\n\n//   const gallery = document.querySelector('.gallery');\n//   gallery.innerHTML = movieCards.join('');\n// }\n\n// export async function renderMoviesCard() {\n//   try {\n//     const { listMovies } = await serviceApi.getListMovies('week');\n//     const movieCards = listMovies.map(\n//       ({ id, genres, poster, release, title, vote_average }) => {\n//         return `<li class=\"gallery__item\">\n//          <a class=\"gallery__link\" href=\"#\">\n//           <img class=\"gallery__image\" data-id=\"${id}\" src=\"${poster}\" alt=\"${title} movie poster\" loading=\"lazy\">\n//          <div class=\"info\">\n//           <h3 class=\"info__item\">${title}</h3>\n//            <div class=\"info-detail\">\n//             <p class=\"info-detail__item\">${genres.join(', ')}</p>\n//              <p class=\"info-detail__item\">${release} <span class=\"film-rating\">${vote_average?.toFixed(\n//           1\n//         )}</span></p>\n//            </div>\n//          </div>\n//         </a>\n//        </li>`;\n//       }\n//     );\n\n//     const gallery = document.querySelector('.gallery');\n//     gallery.innerHTML = movieCards.join('');\n//   } catch (error) {\n//     console.error(error.message);\n//   }\n// }\n\n// renderMoviesCard();\n\n// Функция для получения списка жанров по id\n// async function getGenresByIds(genreIds) {\n//   const keyGenres = JSON.parse(localStorage.getItem('genres'));\n//   // Используем метод map для преобразования каждого id жанра в жанр из localStorage\n//   const genres = genreIds.map(id => keyGenres[id]).filter(genre => genre);\n//   return genres || [];\n// }\n","const backdrop = document.querySelector('[data-modal]')\nconst openButtonModal = document.querySelector('.gallery');\nconst closeButtonModal = document.querySelector('[data-modal-close]')\nconst body = document.querySelector('body');\nconst modal = document.querySelector('.modal');\n\nconst BTN_WATCHED_ADD = 'add to Watched';\nconst BTN_WATCHED_REMOVE = 'remove from Watched';\nconst BTN_QUEUE_ADD = 'add to queue';\nconst BTN_QUEUE_REMOVE = 'remove from queue';\nconst LIST_WATCHED = 'watchedMovies';\nconst LIST_QUEUE = 'listQueue';\n\nlet dataMovie = null;\n\nopenButtonModal.addEventListener('click', onOpenButtonClick)\ncloseButtonModal.addEventListener('click', onCloseButtonClick)\nbackdrop.addEventListener('click', onBackdropClicl)\nmodal.addEventListener('click', handleClickModal);\n\nfunction onOpenButtonClick(e) {\n  e.preventDefault();\n  const currentMovie = e.target.closest('[data-modal-open]');\n\n  if (currentMovie) {\n    backdrop.classList.remove('is-hidden');\n    window.addEventListener('keydown', closeModalByEscape);\n    body.style.overflow = 'hidden';\n    renderPopupBody(currentMovie.dataset.id);\n  }\n}\n\nfunction onCloseButtonClick()  {\n  backdrop.classList.add('is-hidden')\n  window.removeEventListener('keydown', closeModalByEscape)\n  body.style.overflow = 'auto';\n}\n\nfunction onBackdropClicl(event) {\n  if (event.currentTarget === event.target) {\n    onCloseButtonClick()\n  }\n}\n\nfunction closeModalByEscape(event) {\n  const closeButtonEscape = 'Escape'\n  if (event.code === closeButtonEscape) {\n    onCloseButtonClick()\n  }\n}\n\nfunction renderPopupBody(id) {\n  dataMovie = JSON.parse(localStorage.getItem('listMovies'))[id];\n  localStorage.getItem(LIST_WATCHED) || localStorage.setItem(LIST_WATCHED, JSON.stringify({}));\n  localStorage.getItem(LIST_QUEUE) || localStorage.setItem(LIST_QUEUE, JSON.stringify({}));\n\n  const {\n    poster,\n    title,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    overview,\n  } = dataMovie;\n\n  const container = document.querySelector('.modal-content-container');\n\n  if (container) {\n    container.innerHTML = `\n      <div class=\"modal-photo-container\">\n        <picture>\n          <img src=\"${poster}\" width=\"\" class=\"statistick-img\" alt=\"\" />\n        </picture>\n      </div>\n      <div class=\"content-modal\" data-id='${id}'>\n        <h2 class=\"modal-title\">${title}</h2>\n        <div class=\"statistic-container\">\n           <ul class=\"list\">\n              <li>\n                <div class=\"statistic-wraper\">\n                  <p class=\"first-item-statistic\">Vote / Votes</p>\n                  <p><span class=\"statistic-vote\">${vote_average}</span>/<span class=\"statistic-votes\">${vote_count}</span></p>\n                </div>\n              </li>\n              <li>\n                <div class=\"statistic-wraper\">\n                  <p class=\"first-item-statistic\">Popularity</p>\n                  <p>${popularity}</p>\n                </div>\n              </li>\n              <li>\n                <div class=\"statistic-wraper\">\n                  <p class=\"first-item-statistic\">Original Title</p>\n                  <p>${original_title}</p>\n                </div>\n              </li>\n              <li>\n                <div class=\"statistic-wraper\">\n                  <p class=\"first-item-statistic\">Genre</p>\n                  <p>${genres.join(', ')}</p>\n                </div>\n              </li>\n            </ul>\n        </div>\n        <h3 class=\"content-modal-title\">About</h3>\n        <p class=\"content-modal\">${overview}</p>\n        <div class=\"modal-btn-container\">\n          <button class=\"modal-btn btn-add-watched\" data-btn-watch>${getButtonText(id, LIST_WATCHED)}</button>\n          <button class=\"modal-btn btn-add-queue\" data-btn-queue>${getButtonText(id, LIST_QUEUE)}</button>\n        </div>\n      </div>\n    `;\n  }\n}\n\nfunction handleClickModal(e) {\n  const target = e.target;\n  if (target.closest('[data-btn-watch]')) {\n    toggleStatus('data-btn-watch', LIST_WATCHED);\n  }\n  if (target.closest('[data-btn-queue]')) {\n    toggleStatus('data-btn-queue', LIST_QUEUE);\n  }\n}\n\nfunction isIncluded(idMovie, listLocalStorage) {\n  return idMovie in JSON.parse(localStorage.getItem(listLocalStorage));\n}\n\nfunction getButtonText(id, typeList) {\n  let text = 'null';\n\n  switch (typeList) {\n    case LIST_WATCHED:\n      text = isIncluded(id, LIST_WATCHED) ? BTN_WATCHED_REMOVE : BTN_WATCHED_ADD;\n      break;\n    case LIST_QUEUE:\n      text = isIncluded(id, LIST_QUEUE) ? BTN_QUEUE_REMOVE : BTN_QUEUE_ADD;\n      break;\n  }\n\n  return text;\n}\n\nfunction toggleStatus(dataAttr, typeList) {\n  if (!dataAttr) return;\n  const el = document.querySelector(`[${dataAttr}]`);\n\n  const currentID = el.closest('.content-modal').dataset.id;\n\n  const list = JSON.parse(localStorage.getItem(typeList)) ?? {};\n\n  if (currentID in list) {\n    delete list[currentID];\n  } else {\n    list[currentID] = dataMovie;\n  }\n\n  localStorage.setItem(typeList, JSON.stringify(list));\n\n  el.textContent = getButtonText(currentID, typeList);\n}","const loader = document.querySelector('.loader');\n\nwindow.addEventListener('load', () => {\n    loader.classList.add('done');\n});","document.addEventListener('DOMContentLoaded', function () {\n  let btn = document.querySelector('#toTop');\n  window.addEventListener('scroll', function () {\n    window.pageYOffset > 100\n      ? btn.classList.add('show')\n      : btn.classList.remove('show');\n  });\n\n  btn.onclick = function (click) {\n    click.preventDefault();\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n});\n","import { serviceApi } from './service-api';\nimport {\n  renderListMovies,\n  setFilmsToLocalStorage,\n} from '../events/renderGalleryCard';\nimport { pagination } from '../pagination';\n// import { loader }\n\nconst searchForm = document.querySelector('#search-form');\n\nsearchForm.addEventListener('submit', onSearchByKeyword);\n\nlet query;\n\nasync function onSearchByKeyword(e) {\n  e.preventDefault();\n\n  query = e.target.searchQuery.value.trim();\n  if (!query) {\n    return;\n  }\n\n  const res = await serviceApi.searchMovie(query);\n  console.log(res);\n  setFilmsToLocalStorage(res.listMovies);\n  renderListMovies(res['listMovies']);\n\n  pagination.reset(res.total_pages);\n  pagination.off();\n  // pagination.setTotalItems(res.total_results);\n  pagination.on('afterMove', event => {\n    const currentPage = event.page;\n    \n      serviceApi.searchMovie(query, currentPage).then(res => {\n        if(res.page > res.totalPages) {\n          alert(`Sorry, this is last page ${res.totalPages}`)\n          return\n        }\n        return renderListMovies(res['listMovies']);\n      });\n     \n    window.scrollTo(0, 0);\n  });\n return totalItems = res.total_results;\n  // функція, яка буде показувати лоадер\n}\n","import { serviceApi } from '../services/service-api';\nimport { pagination } from '../pagination';\nimport {\n  renderListMovies,\n  setFilmsToLocalStorage,\n} from '../events/renderGalleryCard';\n\n\n\nasync function onPagination(period) {\n  const movies = await serviceApi.getListMovies(period);\n \n  setFilmsToLocalStorage(movies.listMovies);\n  renderListMovies(movies.listMovies);\n\n  // pagination.setTotalItem(movies.total_results)\n  // pagination.movePageTo(movies.page);\n  pagination.reset(movies.total_pages);\n  pagination.off();\n  pagination.on('afterMove', (event) => {\n    const currentPage = event.page;\n    serviceApi\n  .getListMovies(period, currentPage)\n  .then(res => {\n    setFilmsToLocalStorage(res.listMovies);\n    renderListMovies(res.listMovies);\n  })\n  .catch(error => console.log(error));\n   window.scrollTo(0, 0)\n  });\n};\n\nconst dayBtn = document.querySelector('#dayBtn');\nconst weekBtn = document.querySelector('#weekBtn');\n\ndayBtn.addEventListener('click', function onClickDay() {\n  dayBtn.classList.add('active');\n  weekBtn.classList.remove('active');\n  weekBtn.innerText = 'This Week';\n \n  // Get movies for selected period and render them\n  const period = 'day';\n  if(weekBtn.addEventListener) {\n    weekBtn.removeEventListener('click', function onClickWeek() {})\n  }\n  onPagination(period)  \n});\n\n\nweekBtn.addEventListener('click', function onClickWeek() {\n  weekBtn.classList.add('active');\n  dayBtn.classList.remove('active');\n  dayBtn.innerText = 'Today';\n \n  // Get movies for selected period and render them\n  const period = 'week';\n  if(dayBtn.addEventListener) {\n    dayBtn.removeEventListener('click', function onClickDay() {})\n  }\n  onPagination(period);  \n});\n\n\n// Render initial movies\nasync function initialize() {\n  // Render initial movies\n  const initialPeriod = 'day';\n  onPagination(initialPeriod); \n}\n\ninitialize();\n","const checkbox = document.querySelector('#theme-switch-toggle');\n\nconst Theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n};\n\ndocument.body.classList.add(Theme.LIGHT);\n\ncheckbox.addEventListener('change', onCheckboxChange);\n\nfunction onCheckboxChange() {\n  document.body.classList.toggle(Theme.DARK);\n  document.body.classList.toggle(Theme.LIGHT);\n\n  setThemeInfoToLocalStorage();\n}\n\nfunction setThemeInfoToLocalStorage() {\n  if (document.body.classList.contains(Theme.LIGHT)) {\n    checkbox.setAttribute('checked', false);\n    localStorage.setItem('active-theme', Theme.LIGHT);\n  } else if (document.body.classList.contains(Theme.DARK)) {\n    checkbox.setAttribute('checked', true);\n    localStorage.setItem('active-theme', Theme.DARK);\n  }\n}\n\ngetThemeInfoFromLocalStorage();\n\nfunction getThemeInfoFromLocalStorage() {\n  if (localStorage.getItem('active-theme') === Theme.DARK) {\n    onCheckboxChange();\n  }\n}\n","const preloader = document.querySelector('.loading');\nfunction preloaderIsHided() {\n  preloader.classList.add('loading--hiden');\n}\nfunction preloaderDisable() {\n  preloader.style.display = 'none';\n}\n\nwindow.onload = function () {\n  setTimeout(preloaderIsHided, 500);\n  setTimeout(preloaderDisable, 2000);\n};\n","const modalCloseBtn = `\n<button class=\"modal__btn-close btn__close-modal\">\n      <svg\n\n      </svg>\n    </button>\n`;\n\nconst teamListModal = document.createElement('ul');\nconst teamTitle = document.createElement('h2');\n\nfunction onModalTeam(e) {\n  e.preventDefault();\n}\n\nrenderTeamModal();\nopenModal();\nmodalBackdrop.firstElementChild.classList.add('team-modal');\nmodalBackdrop.firstElementChild.classList.remove('modal-open');\n\nfunction renderTeamModal() {\n  modalBackdrop.firstElementChild.innerHTML = '';\n  teamListModal.innerHTML = '';\n  teamTitle.innerHTML = '';\n  teamTitle.classList.add('team__modal-title');\n  teamTitle.insertAdjacentHTML('beforeend', 'GoIT team 5');\n  modalBackdrop.firstElementChild.insertAdjacentElement('beforeend', teamTitle);\n\n  modalBackdrop.firstElementChild.insertAdjacentElement(\n    'beforeend',\n    teamListModal\n  );\n  modalBackdrop.firstElementChild.insertAdjacentHTML(\n    'beforeend',\n    modalCloseBtn\n  );\n  teamListModal.classList.add('team__modal-list');\n  team.map(member => {\n    const markup = `<li class=\"team__modal-item\">\n\t\t<img src=\"${member.img}\" class=\"team__modal-pic\">\n\t\t<h2 class=\"team__modal-member\">${member.name}</h2>\n    <p class=\"team__modal-role\">${member.role}</p>\n\t\t<div>\n\t\t<a href=\"${member.social}\" target=\"_blank\" class=\"team__modal-link\">\n        <svg class=\"icon-github\"></svg>\n        </a>\n\t\t</div>\n\t\t</li>`;\n    modalTeamList.insertAdjacentHTML('beforeend', markup);\n  });\n}\n"],"names":["parcelRequire","$fb9GJ","$1bab9c519cfa82bc$var$container","document","querySelector","$1bab9c519cfa82bc$export$22fa394f3ba39578","$parcel$interopDefault","totalItems","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","$7ab64900740c802f$export$2748887abc8deea0","list","movieCards","map","movie","id","poster","title","genres","release","vote_average","posterUrl","genresToShow","slice","length","push","year","join","vote","Number","toFixed","$7ab64900740c802f$export$bf5e8f8f83e1d784","innerHTML","$7ab64900740c802f$export$2216c845f89689b6","localListMovies","forEach","item","props","localStorage","setItem","JSON","stringify","$830b6cebb9d93ac2$var$backdrop","$830b6cebb9d93ac2$var$openButtonModal","$830b6cebb9d93ac2$var$closeButtonModal","$830b6cebb9d93ac2$var$body","$830b6cebb9d93ac2$var$modal","$830b6cebb9d93ac2$var$dataMovie","$830b6cebb9d93ac2$var$onCloseButtonClick","classList","add","window","removeEventListener","$830b6cebb9d93ac2$var$closeModalByEscape","style","overflow","event","code","$830b6cebb9d93ac2$var$isIncluded","idMovie","listLocalStorage","parse","getItem","$830b6cebb9d93ac2$var$getButtonText","typeList","text","$830b6cebb9d93ac2$var$toggleStatus","dataAttr","el","currentID","closest","dataset","textContent","addEventListener","e","preventDefault","currentMovie","target","remove","vote_count","popularity","original_title","overview","container","$830b6cebb9d93ac2$var$renderPopupBody","currentTarget","$bdfcdc80b4c38739$var$loader","btn","pageYOffset","onclick","click","scrollTo","top","behavior","$gwtqX","$e565a97a09c20d4b$var$query","async","searchQuery","value","trim","res1","serviceApi","searchMovie","console","log","listMovies","reset","total_pages","off","on","then","res","totalPages","alert","total_results","$a6eab0b6ae671a56$var$onPagination","period","movies","getListMovies","catch","error","$a6eab0b6ae671a56$var$dayBtn","$a6eab0b6ae671a56$var$weekBtn","innerText","$a6eab0b6ae671a56$var$initialize","$7a9c6fbbe83c8a59$var$checkbox","$7a9c6fbbe83c8a59$var$Theme","$7a9c6fbbe83c8a59$var$onCheckboxChange","body","toggle","contains","setAttribute","$db7c6654de6b9856$var$preloader","$db7c6654de6b9856$var$preloaderIsHided","$db7c6654de6b9856$var$preloaderDisable","display","onload","setTimeout","$2858ae8b5229c42d$var$teamListModal","createElement","$2858ae8b5229c42d$var$teamTitle","modalBackdrop","firstElementChild","insertAdjacentHTML","insertAdjacentElement","team","member","markup","img","name","role","social","modalTeamList","openModal"],"version":3,"file":"index.7401274c.js.map"}