{"mappings":"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","sources":["src/index.js","src/js/pagination.js","src/js/services/search-by-keyword.js","src/js/events/filter.js","src/js/events/themeSwitcher.js"],"sourcesContent":["import './js/services/service-api';\nimport './js/pagination';\nimport './js/events/renderGalleryCard';\n\nimport './js/modal/modal';\n\nimport './js/loader';\n\nimport './js/events/scrollUp';\n\nimport './js/services/search-by-keyword';\nimport './js/events/filter';\nimport './js/events/themeSwitcher';\nimport './js/events/preloader';\n\nimport './js/teamModal';\nimport '../node_modules/basiclightbox/dist/basicLightbox.min.css';\n","import Pagination from 'tui-pagination';\n// import 'tui-pagination/dist/tui-pagination.css';\n\nconst container = document.querySelector('#pagination');\nconst options = {\n  totalItems: 0,\n  itemsPerPage: 20,\n  visiblePages: 5,\n  page: 1,\n  centerAlign: true,\n  firstItemClassName: 'tui-first-child',\n  lastItemClassName: 'tui-last-child',\n  template: {\n    page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n    currentPage:\n      '<strong class=\"tui-page-btn current-color tui-is-selected\">{{page}}</strong>',\n    moveButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</a>',\n    disabledMoveButton:\n      '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n      '<span class=\"tui-ico-ellip\">...</span>' +\n      '</a>',\n  },\n};\n\nexport const pagination = new Pagination(container, options);\n\n\n\n\n\n","import { serviceApi } from './service-api';\nimport {\n  renderListMovies,\n  setFilmsToLocalStorage,\n} from '../events/renderGalleryCard';\nimport { pagination } from '../pagination';\n// import { loader }\n\nconst searchForm = document.querySelector('#search-form');\n\nsearchForm.addEventListener('submit', onSearchByKeyword);\nlet totalResults;\nlet query;\n\nasync function onSearchByKeyword(e) {\n  e.preventDefault();\n\n  query = e.target.searchQuery.value.trim();\n  if (!query) {\n    return;\n  }\n\n  const res = await serviceApi.searchMovie(query);\n  console.log(res);\n  setFilmsToLocalStorage(res.listMovies);\n  renderListMovies(res['listMovies']);\n  \n  \n  pagination._options.totalItems = res.totalResults;\n  pagination.reset(res.totalResults);\n  pagination.off();\n  \n  pagination.on('afterMove', event => {\n    const currentPage = event.page;\n    \n      serviceApi.searchMovie(query, currentPage)\n      .then(res => {return renderListMovies(res['listMovies']);\n      });\n     \n    window.scrollTo(0, 0);\n  });\n  \n  // функція, яка буде показувати лоадер\n}\n\nexport {totalResults}\n\n","import { serviceApi } from '../services/service-api';\nimport { pagination } from '../pagination';\nimport {\n  renderListMovies,\n  setFilmsToLocalStorage,\n} from '../events/renderGalleryCard';\n\nasync function onPagination(period) {\n  const movies = await serviceApi.getListMovies(period);\n \n  setFilmsToLocalStorage(movies.listMovies);\n  renderListMovies(movies.listMovies);\n\n  pagination._options.totalItems = movies.totalResults;\n \n  pagination.reset(movies.totalResults);\n  pagination.off();\n  \n  pagination.on('afterMove', (event) => {\n    const currentPage = event.page;\n    serviceApi\n  .getListMovies(period, currentPage)\n  .then(res => {\n    setFilmsToLocalStorage(res.listMovies);\n    renderListMovies(res.listMovies);\n  })\n  .catch(error => console.log(error));\n   window.scrollTo(0, 0)\n  });\n};\n\nconst dayBtn = document.querySelector('#dayBtn');\nconst weekBtn = document.querySelector('#weekBtn');\n\ndayBtn.addEventListener('click', function onClickDay() {\n  dayBtn.classList.add('active');\n  weekBtn.classList.remove('active');\n  weekBtn.innerText = 'This Week';\n \n  // Get movies for selected period and render them\n  const period = 'day';\n  if(weekBtn.addEventListener) {\n    weekBtn.removeEventListener('click', function onClickWeek() {})\n  }\n  onPagination(period)  \n});\n\nweekBtn.addEventListener('click', function onClickWeek() {\n  weekBtn.classList.add('active');\n  dayBtn.classList.remove('active');\n  dayBtn.innerText = 'Today';\n \n  // Get movies for selected period and render them\n  const period = 'week';\n  if(dayBtn.addEventListener) {\n    dayBtn.removeEventListener('click', function onClickDay() {})\n  }\n  onPagination(period);  \n});\n\n// Render initial movies\nasync function initialize() {\n  // Render initial movies\n  const initialPeriod = 'day';\n  onPagination(initialPeriod); \n}\n\ninitialize();\n","const checkbox = document.querySelector('#theme-switch-toggle');\n\nconst Theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n};\n\ndocument.body.classList.add(Theme.LIGHT);\n\ncheckbox.addEventListener('change', onCheckboxChange);\n\nfunction onCheckboxChange() {\n  document.body.classList.toggle(Theme.DARK);\n  document.body.classList.toggle(Theme.LIGHT);\n\n  setThemeInfoToLocalStorage();\n}\n\nfunction setThemeInfoToLocalStorage() {\n  if (document.body.classList.contains(Theme.LIGHT)) {\n    checkbox.setAttribute('checked', false);\n    localStorage.setItem('active-theme', Theme.LIGHT);\n  } else if (document.body.classList.contains(Theme.DARK)) {\n    checkbox.setAttribute('checked', true);\n    localStorage.setItem('active-theme', Theme.DARK);\n  }\n}\n\ngetThemeInfoFromLocalStorage();\n\nfunction getThemeInfoFromLocalStorage() {\n  if (localStorage.getItem('active-theme') === Theme.DARK) {\n    onCheckboxChange();\n  }\n}\n"],"names":["parcelRequire","$fb9GJ","$1bab9c519cfa82bc$var$container","document","querySelector","$1bab9c519cfa82bc$export$22fa394f3ba39578","$parcel$interopDefault","totalItems","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","$gwtqX","$e565a97a09c20d4b$var$query","addEventListener","async","e","preventDefault","target","searchQuery","value","trim","res1","serviceApi","searchMovie","console","log","$axbZj","setFilmsToLocalStorage","listMovies","renderListMovies","_options","totalResults","reset","off","on","event","then","res","window","scrollTo","$a6eab0b6ae671a56$var$onPagination","period","movies","getListMovies","catch","error","$a6eab0b6ae671a56$var$dayBtn","$a6eab0b6ae671a56$var$weekBtn","classList","add","remove","innerText","removeEventListener","$a6eab0b6ae671a56$var$initialize","$7a9c6fbbe83c8a59$var$checkbox","$7a9c6fbbe83c8a59$var$Theme","$7a9c6fbbe83c8a59$var$onCheckboxChange","body","toggle","contains","setAttribute","localStorage","setItem","getItem"],"version":3,"file":"index.26b9c08b.js.map"}